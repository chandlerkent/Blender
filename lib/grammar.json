{   
    "lex": {
        "macros": {
            "Ident":        "((?:-{0,1}[a-zA-Z]+)+)",
            "HexNumber":    "([0-9a-fA-F]{6}|[0-9a-fA-F]{3})",
            "Number":       "([0-9]*\\.[0-9]+|[0-9]+)",
            "RGB":          "(RGB|rgb)",
        },
        
        "rules": [
            ["/\\*(.|\\n|\\r|\\r\\n)*?\\*/",                    "/* skip */"],
            ["\\s+",                                            "/* skip */"],
            ["\\#{HexNumber}",                                  "return 'HEXCOLOR';"],
            ["{Number}",                                        "return 'NUMBER';"],
            ["bold",                                            "return 'BOLD';"],
            ["{Ident}",                                         "return 'IDENT';"],
            ["(\\{|\\}|\\:|\\;|\\.|\\#)",                       "return yytext;"],
        ]
    },

    "bnf": { 
        "Stylesheet":       [
                                ["StmtList", "$$ = new yy.Stylesheet($1); return $$;"],
                            ],
        "StmtList":         [
                                ["", "$$ = [];"],
                                ["Stmt StmtList", "$2.unshift($1); $$ = $2;"],
                            ],
        "Stmt":             [
                                ["Class { AttributeList }", "$$ = new yy.ClassNode($1, $3);"],
                                ["Class : IDENT { AttributeList }", "$$ = new yy.ClassNode($1, $5, $3);"],
                            ],
        "Class":            [
                                [". IDENT", "$$ = $2;"],
                            ],
        "AttributeList":    [
                                ["", "$$ = [];"],
                                ["Attribute AttributeList", "$2.unshift($1); $$ = $2;"],
                            ],
        "Attribute":        [
                                ["Key : Value ;", "if ($3.setIsInsetRect) { $3.setIsInsetRect($1.indexOf('inset') > -1) }; $$ = new yy.AttributeNode($1, $3);"]
                            ],
        "Key":              [
                                ["IDENT", "$$ = $1;"]
                            ],
        "Value":            [
                                ["Font", "$$ = $1;"],
                                ["Color", "$$ = $1;"],
                                ["SizeOrRect", "$$ = $1;"],
                                ["IDENT", "if (yy.NamedColorNode.isNamedColor($1)) { $$ = new yy.NamedColorNode($1); } else if (yy.HexColorNode.namedColorToHexValue($1)) { $$ = new yy.HexColorNode(yy.HexColorNode.namedColorToHexValue($1)); } else { $$ = $1; }"],
                            ],
        "Font":             [
                                ["BOLD IDENT NUMBER", "$$ = new yy.FontNode($1, $2, $3);"],
                                ["BOLD NUMBER IDENT", "$$ = new yy.FontNode($1, $2, $3);"],
                                ["IDENT BOLD NUMBER", "$$ = new yy.FontNode($1, $2, $3);"],
                                ["IDENT NUMBER BOLD", "$$ = new yy.FontNode($1, $2, $3);"],
                                ["NUMBER BOLD IDENT", "$$ = new yy.FontNode($1, $2, $3);"],
                                ["NUMBER IDENT BOLD", "$$ = new yy.FontNode($1, $2, $3);"],
                                ["BOLD NUMBER", "$$ = new yy.FontNode($1, $2);"],
                                ["NUMBER BOLD", "$$ = new yy.FontNode($1, $2);"],
                                ["IDENT NUMBER", "$$ = new yy.FontNode($1, $2);"],
                                ["NUMBER IDENT", "$$ = new yy.FontNode($1, $2);"],
                                ["NUMBER", "$$ = new yy.FontNode($1);"],
                            ],
        "Color":            [
                                ["HEXCOLOR", "$$ = new yy.HexColorNode($1);"],
                            ],
        "SizeOrRect":       [
                                ["NUMBER NUMBER NUMBER NUMBER", "$$ = new yy.RectNode($1, $2, $3, $4);"],
                                ["NUMBER NUMBER", "$$ = new yy.SizeNode($1, $2);"],
                            ],
    }
}